from django.core.mail import send_mail
from django.conf import settings
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import ssl
import requests

def send_application_notification(application):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ"""
    
    print(f"üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É email –¥–ª—è –∑–∞—è–≤–∫–∏ #{application.application_number}")
    
    # –°–æ–∑–¥–∞–µ–º SSL –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    context = ssl.create_default_context()
    context.check_hostname = False
    context.verify_mode = ssl.CERT_NONE
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É
        server = smtplib.SMTP(settings.EMAIL_HOST, settings.EMAIL_PORT)
        server.starttls(context=context)
        server.login(settings.EMAIL_HOST_USER, settings.EMAIL_HOST_PASSWORD)
        
        # üìß Email –∫–ª–∏–µ–Ω—Ç—É
        print(f"üìß –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email –∫–ª–∏–µ–Ω—Ç—É: {application.email}")
        
        customer_msg = MIMEMultipart()
        customer_msg['From'] = settings.DEFAULT_FROM_EMAIL
        customer_msg['To'] = application.email
        customer_msg['Subject'] = f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ #{application.application_number} –ø–æ–ª—É—á–µ–Ω–∞'
        
        customer_body = f"""–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {application.full_name}!

–í–∞—à–∞ –∑–∞—è–≤–∫–∞ #{application.application_number} —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ.

–î–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏:
- –ü—Ä–æ–¥—É–∫—Ç: {application.product.name}
- –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {application.created_at.strftime('%d.%m.%Y %H:%M')}
- –°—Ç–∞—Ç—É—Å: {application.status.name}

–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏ –ø–æ —Å—Å—ã–ª–∫–µ:
http://localhost:3000/tracking?number={application.application_number}

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ —Å—Ç—Ä–∞—Ö–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏"""
        
        customer_msg.attach(MIMEText(customer_body, 'plain'))
        server.send_message(customer_msg)
        print(f"‚úÖ Email –∫–ª–∏–µ–Ω—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # üìß Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        print(f"üìß –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {settings.ADMIN_EMAIL}")
        
        admin_msg = MIMEMultipart()
        admin_msg['From'] = settings.DEFAULT_FROM_EMAIL
        admin_msg['To'] = settings.ADMIN_EMAIL
        admin_msg['Subject'] = f'–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #{application.application_number}'
        
        admin_body = f"""–ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #{application.application_number}.

–î–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏:
- –ü—Ä–æ–¥—É–∫—Ç: {application.product.name}
- –ö–ª–∏–µ–Ω—Ç: {application.full_name}
- –¢–µ–ª–µ—Ñ–æ–Ω: {application.phone}
- Email: {application.email}
- –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {application.created_at.strftime('%d.%m.%Y %H:%M')}

–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–æ–π –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
        
        admin_msg.attach(MIMEText(admin_body, 'plain'))
        server.send_message(admin_msg)
        print(f"‚úÖ Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        server.quit()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {e}")
        raise e

def send_telegram_notification(application):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Bot"""
    
    message_text = f"""üîî *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞!*

üìã *–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏:* `{application.application_number}`
üë§ *–ö–ª–∏–µ–Ω—Ç:* {application.full_name}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* {application.phone}
üìß *Email:* {application.email}
üè¢ *–ü—Ä–æ–¥—É–∫—Ç:* {application.product.name}
üìÖ *–î–∞—Ç–∞:* {application.created_at.strftime('%d.%m.%Y %H:%M')}
üìä *–°—Ç–∞—Ç—É—Å:* {application.status.name}

üîó [–û—Ç—Å–ª–µ–¥–∏—Ç—å –∑–∞—è–≤–∫—É](http://localhost:3000/tracking?number={application.application_number})"""
    
    try:
        print(f"üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
        
        url = f"https://api.telegram.org/bot{settings.TELEGRAM_BOT_TOKEN}/sendMessage"
        
        params = {
            'chat_id': settings.TELEGRAM_CHAT_ID,
            'text': message_text,
            'parse_mode': 'Markdown',
            'disable_web_page_preview': True
        }
        
        response = requests.get(url, params=params, timeout=10)
        result = response.json()
        
        print(f"üìä –û—Ç–≤–µ—Ç Telegram API: {result}")
        
        if result.get('ok'):
            print(f"‚úÖ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {result}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram: {e}")
        return False

def test_telegram():
    """–¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram"""
    
    message_text = """üß™ *–¢–ï–°–¢ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π*

–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å—Ç—Ä–∞—Ö–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã!

–ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ - –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! üöÄ

_–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–∫—Ç–∏–≤–Ω–∞_"""
    
    try:
        print(f"üß™ –¢–ï–°–¢: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Telegram —Å–æ–æ–±—â–µ–Ω–∏–µ")
        
        url = f"https://api.telegram.org/bot{settings.TELEGRAM_BOT_TOKEN}/sendMessage"
        
        params = {
            'chat_id': settings.TELEGRAM_CHAT_ID,
            'text': message_text,
            'parse_mode': 'Markdown'
        }
        
        response = requests.get(url, params=params, timeout=10)
        result = response.json()
        
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: {result}")
        
        if result.get('ok'):
            print("‚úÖ –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù! Telegram —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return True
        else:
            print(f"‚ùå –¢–ï–°–¢ –ù–ï–£–î–ê–ß–ï–ù: {result}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False

# –û—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
def send_sms_notification(application):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram (–∑–∞–º–µ–Ω–∞ SMS)"""
    return send_telegram_notification(application)